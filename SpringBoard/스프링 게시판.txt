스프링 게시판.txt

 - DB관련 파트
	디비 생성 / 계정 준비
	테이블 생성(설계)
	더미(dummy)데이터 생성

 - 스프링 관련 파트
	개발에 필요한 패키지 설정 / 코드 규칙 설정
	개발 파트 분배
	테스트 동작의 구현

 - 화면 파트
	jsp 페이지에서의 구현
	템플릿 사용

 * 의존 객체 자동 주입 : 별도의 설정없이 스프링(컨테이너)이 자동으로
						 의존대상를 객체에 주입해서 사용가능하게 만드는 것
						 
 - @Inject
 	java에서 지원하는 어노테이션
 	-> 특정 프레임워크에 비종속적
 	찾는 순서 : Inject -> root-context 
 				-> [타입](SqlSession) - [@Qualitier] - [이름](sqlSession) - 주입 실패
 	사용 범위 : 멤버변수, setter(), 생성자(), 일반 메서드
 - @Autowired
 	Spring에서 지원하는 어노테이션
 	찾는 순서 : Autowired -> root-context					  
 				-> [타입](SqlSession) - [이름](sqlSession) - [@Qualitier] - 주입 실패
 	사용 범위 : 멤버변수, setter(), 생성자(), 일반 메서드

 - @Resource
 	java에서 지원하는 어노테이션
 	-> 특정 프레임워크에 비종속적
 	찾는 순서 : Autowired -> root-context					  
 				-> [이름](sqlSession) - [타입](SqlSession) - [@Qualitier] - 주입 실패
 	사용 범위 : 멤버변수, setter()
 	
 	
 	@Qualitier : 객체의 별명(주랍하는 객체가 하나 이상일 때 구분
 	
 	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
 		<qualifier value="d1"/>
	</bean>

 	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
 		<qualifier value="d2"/>
	</bean>

	@Inject
	@Autowired	@Aualifier("d1")
	private DataSource ds;
	
 - @ModelAttribute("bno") int bno
	=> 주소줄에 있는 데이터를 가져와서 사용, 연결된 뷰페이지로 이동 ${bno}
		request.getPatameter("bno") + request.setPatameter();
	=> 1:N 관계에서 사용 (N - bean(객체), collection)
			
 - @RequestParam("bno") int bno
	=> request.getPatameter("bno") 와 동일함, 자동형변횐 포함 (문자, 숫자, 날짜)
	=> 1:1 관계에서 사용
	
	
	
	
	
	
	